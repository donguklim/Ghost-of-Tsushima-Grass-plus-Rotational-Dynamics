
 // p0 is assumed to be (0,0)
float3 GrassNormal(in float2 uv, in float3 p1, in float3 p2, in float3 p3, float mid_smooth, float rim_pos, float rim_smooth, float y_strength)
{
    float t = uv.x;
    float g = uv.y;

    float s = 1 - t;
    float s2 = s * s;
    float t2 = t * t;

    float2 xy_plane_curve_tangent = 3 * (s2 * p1.xy + t2 * (p3.xy - p2.xy)) + 6 * s * t * (p2.xy - p1.xy);
    float3 xy_plane_norm = float3(-xy_plane_curve_tangent.y, xy_plane_curve_tangent.x, 0);
    float length_before = length(xy_plane_norm);
    xy_plane_norm = (length_before > 0.0) ? (xy_plane_norm / length_before) : xy_plane_norm;

    float3 curve_tangent = 3 * (s2 * p1 + t2 * (p3 - p2)) + 6 * s * t * (p2 - p1);
    float3 curve_norm = cross(curve_tangent, xy_plane_norm);

    float horizontal_axis = g - 0.5;
    float smoothing_value = saturate((horizontal_axis + mid_smooth) / (mid_smooth * 2));
    float middle_value = smoothing_value * smoothing_value * (3.0 - 2.0 * smoothing_value);

    float rim_smoothing_value = saturate((abs(horizontal_axis) - rim_pos + rim_smooth) / (rim_smooth * 2));
    float rim_value = rim_smoothing_value * rim_smoothing_value * (3.0 - 2.0 * rim_smoothing_value);

    float linear_value = (1.0 - middle_value) * rim_value + middle_value * (1.0 - rim_value);

    float y = (1 - 2 * linear_value) * y_strength;
    float3 normal = curve_norm + y * xy_plane_norm;
    length_before = length(normal);

    return (length_before > 0.0) ? (normal / length_before) : normal;
}
